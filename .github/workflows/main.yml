name: Release

on:
  create:
    tags:
      - v*

jobs:
  release:
    name: Binary_Tracker_Release
    runs-on: ubuntu-latest

    steps:
    
    - name: Checkout
      uses: actions/checkout@v2
      
    - name: Cache pip
      uses: actions/cache@v2
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
          
    - name: Cache PlatformIO
      uses: actions/cache@v2
      with:
        path: ~/.platformio
        key: ${{ runner.os }}-${{ hashFiles('**/lockfiles') }}

    - name: Set up Python
      uses: actions/setup-python@v1

    - name: Install pio
      run: |
        python -m pip install --upgrade pip
        pip install platformio
        
    - name: Run PlatformIO build
      run: pio run -e esp32devOTA --project-dir ./tracker
      
    - name: calc firmware hash
      run: md5sum ./tracker/.pio/build/esp32devOTA/firmware.bin | cat > firmware.hash
      
    - name: create release
      uses: actions/create-release@v1
      id: create_release
      with:
        draft: false
        prerelease: false
        generate_release_notes: true
        tag_name: ${{ github.ref }}
      env:
          GITHUB_TOKEN: ${{ github.token }}

    - name: upload firmware hash
      uses: actions/upload-release-asset@v1
      env:
          GITHUB_TOKEN: ${{ github.token }}
      with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: ./firmware.hash
          asset_name: firmware.hash
          asset_content_type: application/octet-stream
          
    - name: upload firmware binary
      uses: actions/upload-release-asset@v1
      env:
          GITHUB_TOKEN: ${{ github.token }}
      with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: ./tracker/.pio/build/esp32devOTA/firmware.bin
          asset_name: firmware.bin
          asset_content_type: application/octet-stream
